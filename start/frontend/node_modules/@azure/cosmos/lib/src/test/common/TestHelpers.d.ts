import { Container, CosmosClient, Database, RequestOptions } from "../..";
import { ContainerDefinition, ItemDefinition, ItemResponse, PermissionResponse, Resource, TriggerResponse, User, UserDefinedFunctionResponse } from "../../client";
import { StoredProcedureResponse } from "../../client/StoredProcedure/StoredProcedureResponse";
import { UserResponse } from "../../client/User/UserResponse";
export declare function addEntropy(name: string): string;
export declare function getEntropy(): string;
export declare function removeAllDatabases(client?: CosmosClient): Promise<void>;
export declare function getTestDatabase(testName: string, client?: CosmosClient): Promise<Database>;
export declare function getTestContainer(testName: string, client?: CosmosClient, containerDef?: ContainerDefinition, options?: RequestOptions): Promise<Container>;
export declare function bulkInsertItems(container: Container, documents: any[]): Promise<Array<ItemDefinition & Resource>>;
export declare function bulkReadItems(container: Container, documents: any[], partitionKey: string): Promise<void>;
export declare function bulkReplaceItems(container: Container, documents: any[]): Promise<any[]>;
export declare function bulkDeleteItems(container: Container, documents: any[], partitionKeyPropertyName: string): Promise<void>;
export declare function bulkQueryItemsWithPartitionKey(container: Container, documents: any[], partitionKeyPropertyName: any): Promise<void>;
export declare function createOrUpsertItem(container: Container, body: any, options: RequestOptions, isUpsertTest: boolean): Promise<ItemResponse<any>>;
export declare function replaceOrUpsertItem(container: Container, body: any, options: RequestOptions, isUpsertTest: boolean): Promise<ItemResponse<any>>;
export declare function createOrUpsertUser(database: Database, body: any, options: any, isUpsertTest: boolean): Promise<UserResponse>;
export declare function replaceOrUpsertUser(database: Database, body: any, options: any, isUpsertTest: boolean): Promise<UserResponse>;
export declare function createOrUpsertPermission(user: User, body: any, options: any, isUpsertTest: boolean): Promise<PermissionResponse>;
export declare function replaceOrUpsertPermission(user: User, body: any, options: any, isUpsertTest: boolean): Promise<PermissionResponse>;
export declare function createOrUpsertTrigger(container: Container, body: any, options: any, isUpsertTest: boolean): Promise<TriggerResponse>;
export declare function replaceOrUpsertTrigger(container: Container, body: any, options: any, isUpsertTest: boolean): Promise<TriggerResponse>;
export declare function createOrUpsertUserDefinedFunction(container: Container, body: any, options: any, isUpsertTest: boolean): Promise<UserDefinedFunctionResponse>;
export declare function replaceOrUpsertUserDefinedFunction(container: Container, body: any, options: any, isUpsertTest: boolean): Promise<UserDefinedFunctionResponse>;
export declare function createOrUpsertStoredProcedure(container: Container, body: any, options: any, isUpsertTest: boolean): Promise<StoredProcedureResponse>;
export declare function replaceOrUpsertStoredProcedure(container: Container, body: any, options: any, isUpsertTest: boolean): Promise<StoredProcedureResponse>;
