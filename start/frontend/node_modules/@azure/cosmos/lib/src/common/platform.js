"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const os = tslib_1.__importStar(require("os"));
const _1 = require(".");
/** @hidden */
class Platform {
    static getPlatformDefaultHeaders() {
        const defaultHeaders = {};
        defaultHeaders[_1.Constants.HttpHeaders.UserAgent] = Platform.getUserAgent();
        return defaultHeaders;
    }
    static getDecodedDataLength(encodedData) {
        const buffer = Buffer.from(encodedData, "base64");
        return buffer.length;
    }
    static getUserAgent() {
        // gets the user agent in the following format
        // "{OSName}/{OSVersion} Nodejs/{NodejsVersion} documentdb-nodejs-sdk/{SDKVersion}"
        // for example:
        // "linux/3.4.0+ Nodejs/v0.10.25 documentdb-nodejs-sdk/1.10.0"
        // "win32/10.0.14393 Nodejs/v4.4.7 documentdb-nodejs-sdk/1.10.0"
        const osName = Platform._getSafeUserAgentSegmentInfo(os.platform());
        const osVersion = Platform._getSafeUserAgentSegmentInfo(os.release());
        const nodejsVersion = Platform._getSafeUserAgentSegmentInfo(process.version);
        const userAgent = `${osName}/${osVersion} Nodejs/${nodejsVersion} ${_1.Constants.SDKName}/${_1.Constants.SDKVersion}`;
        return userAgent;
    }
    static _getSafeUserAgentSegmentInfo(s) {
        // catch null, undefined, etc
        if (typeof s !== "string") {
            s = "unknown";
        }
        // remove all white spaces
        s = s.replace(/\s+/g, "");
        if (!s) {
            s = "unknown";
        }
        return s;
    }
}
exports.Platform = Platform;
//# sourceMappingURL=platform.js.map