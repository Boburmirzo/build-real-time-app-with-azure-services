"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/** @hidden */
var FetchResultType;
(function (FetchResultType) {
    FetchResultType[FetchResultType["Done"] = 0] = "Done";
    FetchResultType[FetchResultType["Exception"] = 1] = "Exception";
    FetchResultType[FetchResultType["Result"] = 2] = "Result";
})(FetchResultType = exports.FetchResultType || (exports.FetchResultType = {}));
/** @hidden */
class FetchResult {
    /**
     * Wraps fetch results for the document producer.
     * This allows the document producer to buffer exceptions so that actual results don't get flushed during splits.
     * @constructor DocumentProducer
     * @param {object} feedReponse                  - The response the document producer got back on a successful fetch
     * @param {object} error                        - The exception meant to be buffered on an unsuccessful fetch
     * @ignore
     */
    constructor(feedResponse, error) {
        // TODO: feedResponse/error
        if (feedResponse) {
            this.feedResponse = feedResponse;
            this.fetchResultType = FetchResultType.Result;
        }
        else {
            this.error = error;
            this.fetchResultType = FetchResultType.Exception;
        }
    }
}
exports.FetchResult = FetchResult;
//# sourceMappingURL=FetchResult.js.map